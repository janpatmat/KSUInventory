/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ksufinal;

import java.awt.Color;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Viver
 */
public class sortCategory extends javax.swing.JFrame {

    ResultSet rs;
    
    static ArrayList<String> selectedCategories = new ArrayList<String>();
    static String categorySortStatement = "";
    
    
    private String location;
    /**
     * Creates new form sortCategory
     */
    public sortCategory(String location) {
        initComponents();
        this.location = location;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectAllCBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        sortCategoryTable = new javax.swing.JTable();
        saveprodSortBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        selectAllCBox.setText("Select All");
        selectAllCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllCBoxActionPerformed(evt);
            }
        });

        sortCategoryTable.setAutoCreateRowSorter(true);
        sortCategoryTable.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sortCategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select your Categories here"
            }
        ));
        sortCategoryTable.setRowHeight(25);
        jScrollPane1.setViewportView(sortCategoryTable);

        saveprodSortBtn.setText("Save");
        saveprodSortBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveprodSortBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectAllCBox)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveprodSortBtn))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(selectAllCBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(saveprodSortBtn)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectAllCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllCBoxActionPerformed
        //        DefaultTableModel t = (DefaultTableModel)sortProdTable.getModel();
        if (selectAllCBox.isSelected()){
            sortCategoryTable.setRowSelectionAllowed(false);
            sortCategoryTable.setEnabled(false);
            sortCategoryTable.setForeground(Color.LIGHT_GRAY);
            sortCategoryTable.setBackground(new Color(236, 236, 236));
        }
        else{
            sortCategoryTable.setRowSelectionAllowed(true);
            sortCategoryTable.setEnabled(true);
            sortCategoryTable.setForeground(Color.black);
            sortCategoryTable.setBackground(Color.white);
        }
    }//GEN-LAST:event_selectAllCBoxActionPerformed

    private void saveprodSortBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveprodSortBtnActionPerformed

        selectedCategories.clear();
        categorySortStatement = "";
        

        if (selectAllCBox.isSelected()){
            if (location.equals("TransReport")){
                TransReport.CategorySortTF.setText("All");
            }
            else if (location.equals("report")){
                report.CategorySortTF.setText("All");
            }
            
        }
        else{
            int[] sr = sortCategoryTable.getSelectedRows();
            for (int x = 0; x < sr.length; x++){
                selectedCategories.add(sortCategoryTable.getValueAt(sr[x], 0).toString());
            }
            String jointArray = String.join(", ", selectedCategories);
            
            if (location.equals("TransReport")){
                TransReport.CategorySortTF.setText(jointArray);
            }
            else if (location.equals("report")){
                report.CategorySortTF.setText(jointArray);
            }

            ArrayList<String> strArr = new ArrayList<String>();

            for (String x: selectedCategories){
                strArr.add("Sub = '" + x + "'");
            }

            categorySortStatement = " (" + String.join(" or ", strArr) + ") ";

        }

        this.setVisible(false);
        
        System.out.println(categorySortStatement);

        //        System.out.println(jointArray);

    }//GEN-LAST:event_saveprodSortBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DefaultTableModel t = (DefaultTableModel)sortCategoryTable.getModel();
        
        try{
            rs = KsuFinal.con.createStatement().executeQuery("SELECT * FROM expenses.categorytable;");
            while(rs.next()){
                String nm = rs.getString("categoryName");
                String [] nmArr = {nm};
                
                t.addRow(nmArr);
                
            }  
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sortCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sortCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sortCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sortCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sortCategory("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveprodSortBtn;
    private javax.swing.JCheckBox selectAllCBox;
    private javax.swing.JTable sortCategoryTable;
    // End of variables declaration//GEN-END:variables
}
