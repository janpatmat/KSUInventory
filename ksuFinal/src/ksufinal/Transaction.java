/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ksufinal;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class Transaction extends javax.swing.JFrame {

    
    
    ResultSet rs;
    PreparedStatement st = null;
    ArrayList<String[]> transactionArr = new ArrayList<String[]>();
    ArrayList <String> supar = new ArrayList <String>();
    String currRadioBtn = "deposit";
    /**
     * Creates new form Transaction
     */
    public Transaction() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        depositRadioBtn = new javax.swing.JRadioButton();
        withdrawRadioBtn = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        productComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        unitShow = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        transactionQtyTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        transactionPriceTF = new javax.swing.JTextField();
        quantityShow = new javax.swing.JLabel();
        transactionBtn = new javax.swing.JButton();
        suppBranchLabel = new javax.swing.JLabel();
        supCmb = new javax.swing.JComboBox();
        branchCmb = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        buttonGroup1.add(depositRadioBtn);
        depositRadioBtn.setSelected(true);
        depositRadioBtn.setText("Deposit");
        depositRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositRadioBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(withdrawRadioBtn);
        withdrawRadioBtn.setText("Withdraw");
        withdrawRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawRadioBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Product");

        productComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Unit of Measure");

        unitShow.setEditable(false);

        jLabel3.setText("Quantity");

        jLabel4.setText("Price");

        transactionBtn.setText("Deposit");
        transactionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionBtnActionPerformed(evt);
            }
        });

        suppBranchLabel.setText("Supplier");

        branchCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Juna", "Marfori", "Bangkal" }));

        jMenu1.setText("Add suplier");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(depositRadioBtn)
                                .addGap(18, 18, 18)
                                .addComponent(withdrawRadioBtn))
                            .addComponent(transactionBtn))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                        .addComponent(productComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(unitShow, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(transactionQtyTF)
                                                .addGap(89, 89, 89)))))
                                .addComponent(quantityShow, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(suppBranchLabel)
                                    .addComponent(jLabel4))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(transactionPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(supCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(branchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositRadioBtn)
                    .addComponent(withdrawRadioBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(productComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityShow, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(unitShow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(transactionQtyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(transactionPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suppBranchLabel)
                    .addComponent(supCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(branchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(169, 169, 169)
                .addComponent(transactionBtn)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productComboBoxActionPerformed
        if (transactionArr.size() > 0){
            int idx = productComboBox.getSelectedIndex();
            String quan = transactionArr.get(idx)[0];
            String unit = transactionArr.get(idx)[1];
            
            if (currRadioBtn.equals("withdraw")){
                quantityShow.setText("Current stocks: " + quan +  " " + transactionArr.get(idx)[1]);
                transactionPriceTF.setText(transactionArr.get(idx)[5]);
            }
//            quantityShow.setText("Quantity in the Inverntory: " + quan + " " + unit);
            unitShow.setText(unit);
        }
    }//GEN-LAST:event_productComboBoxActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
            String supplies;
            rs = KsuFinal.con.createStatement().executeQuery("SELECT * FROM expenses.producttable;");
            ResultSet res = KsuFinal.con.createStatement().executeQuery("SELECT * FROM suppliertable");
            while(rs.next()){
                String id = rs.getString("productID");
                String nm = rs.getString("productName");
                String qt = rs.getString("productQuantity");
//                String qt = "null";
                String ut = rs.getString("productUnit");
                String mm = rs.getString("prodMinq");
                String sp = rs.getString("standardPrice");
                
                productComboBox.addItem(nm);
                String[] item = {qt, ut, nm, mm, id, sp};
                
                transactionArr.add(item);
                
            }  
            while(res.next()){
              supplies = res.getString("supplierName");
              supar.add(supplies);
          }
             for(int i = 0; i <supar.size();i++){
               supCmb.addItem(supar.get(i));
           }
        }
        catch(Exception e){
            System.out.println(e);
        }
        
        int idx = productComboBox.getSelectedIndex();
//        String quan = quanAndUnitArr.get(idx)[0];
        String unit = transactionArr.get(idx)[1];
//        
//        
//        
//        quantityShow.setText("Quantity in the Inverntory: " + quan + " " + unit);
        unitShow.setText(unit);
       
    }//GEN-LAST:event_formWindowOpened

    private void depositRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositRadioBtnActionPerformed
        // TODO add your handling code here:
        
        // Edit text fields
        quantityShow.setText("");
        transactionPriceTF.setEditable(true);
        suppBranchLabel.setText("Supplier");
        //transSuppBranchTF.setText("");
        transactionQtyTF.setText("");
        transactionPriceTF.setText("");
        transactionBtn.setText("Deposit");
        
        currRadioBtn = "deposit";
        
        
        
        
        
        
    }//GEN-LAST:event_depositRadioBtnActionPerformed

    private void withdrawRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawRadioBtnActionPerformed
//       System.out.println("withdraw");

         // Edit text fields
        int idx = productComboBox.getSelectedIndex();
        quantityShow.setText("Current stocks: " + transactionArr.get(idx)[0] + " " + transactionArr.get(idx)[1]); 
        suppBranchLabel.setText("Branch");
       // transSuppBranchTF.setText("");
        transactionQtyTF.setText("");
        transactionPriceTF.setText(transactionArr.get(idx)[5]);
        transactionBtn.setText("Withdraw");
       
        currRadioBtn = "withdraw";
       
       //Get standard price from the product table and setText to priceTF
       transactionPriceTF.setEditable(false);
       
       
       
       
       
    }//GEN-LAST:event_withdrawRadioBtnActionPerformed

    private void transactionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionBtnActionPerformed
        if (transactionPriceTF.getText().length() == 0 ||transactionQtyTF.getText().length() == 0){
            JOptionPane.showMessageDialog(this,"Missing fields");
        }
        else{
        
        
        //Edit the table in the products table
        int idx = productComboBox.getSelectedIndex();
        String nm = transactionArr.get(idx)[2];
        int quan = Integer.parseInt(transactionArr.get(idx)[0]);
        int inputQuan = Integer.parseInt(transactionQtyTF.getText());
        String newQuan = "";
        int yesNO = 0;
        
        if (currRadioBtn.equals("deposit")){
            newQuan = String.valueOf(quan + inputQuan);
          
        }else{
            newQuan =String.valueOf(quan - inputQuan);
            int intNewQuan = Integer.parseInt(newQuan);
            int intMin = Integer.parseInt(transactionArr.get(idx)[3]);
            if (intNewQuan >= 0){
                if (intNewQuan < intMin){
                    // display Warning if below minimum

                    yesNO = JOptionPane.showConfirmDialog (null, "You product is now below the minimum, Would you still like to proceed?","Warning",JOptionPane.YES_NO_OPTION);

                }
            }else{
                
                yesNO = JOptionPane.NO_OPTION;
                JOptionPane.showMessageDialog(this,"You cannot withdraw this quantity");
            }
        }
        if (yesNO == JOptionPane.YES_OPTION){
            String statement = "UPDATE expenses.producttable SET productQuantity = " + newQuan + " WHERE productName = '" + nm + "'";

            try{
                KsuFinal.con.prepareStatement(statement).executeUpdate(); 
            }
            catch(Exception e){
                System.out.println(e);
            }      

            
            transactionArr.get(idx)[0] = newQuan; // Update the array
            
            //Edit the table in the transactions table
            try{
                PreparedStatement st = KsuFinal.con.prepareStatement("INSERT INTO expenses.producttrans (prodID,Name,Quantity,Unit,Price,SuppBranch,Date, Action)VALUES(?,?,?,?,?,?,?,?)");
                st.setString(1, transactionArr.get(idx)[4]);
                st.setString(2, transactionArr.get(idx)[2]);
                st.setString(3, transactionArr.get(idx)[0]);
                st.setString(4, transactionArr.get(idx)[1]);
                st.setString(5, transactionPriceTF.getText());
                if(currRadioBtn.equals("deposit")){
                st.setString(6, (String) supCmb.getSelectedItem());
                }
                else{
                    st.setString(6, (String) branchCmb.getSelectedItem());
                }
                st.setString(7, java.time.LocalDate.now().toString());
                if (currRadioBtn.equals("deposit")){
                    st.setString(8, "deposit");
                }else{
                    st.setString(8, "withdraw");
                }

                st.executeUpdate();

            }
            catch(Exception e){
                System.out.println(e);
            }  
            TransReport.updateTransReportTable();


            if (currRadioBtn.equals("deposit")){
                JOptionPane.showMessageDialog(this,"Successfully deposited the product");
            }else{
                JOptionPane.showMessageDialog(this,"Successfully withdrawn the product");
                quantityShow.setText("Current stocks: " + newQuan +  " " + transactionArr.get(idx)[1]); // Update the Quantity text field
            }


        }
        
        }


        
        
        
        
        
        
        
    }//GEN-LAST:event_transactionBtnActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        addSupplier adup = new addSupplier();
        adup.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox branchCmb;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton depositRadioBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JComboBox<String> productComboBox;
    private javax.swing.JLabel quantityShow;
    private javax.swing.JComboBox supCmb;
    private javax.swing.JLabel suppBranchLabel;
    private javax.swing.JButton transactionBtn;
    private javax.swing.JTextField transactionPriceTF;
    private javax.swing.JTextField transactionQtyTF;
    private javax.swing.JTextField unitShow;
    private javax.swing.JRadioButton withdrawRadioBtn;
    // End of variables declaration//GEN-END:variables
}
