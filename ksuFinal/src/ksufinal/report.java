/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ksufinal;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Viver
 */
public class report extends javax.swing.JFrame {

    /**
     * Creates new form report
     */
    String databaseTableName = "";
    
    
    public report() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TransactionCB = new javax.swing.JCheckBox();
        TransactionNoCB = new javax.swing.JCheckBox();
        ProductNoCB = new javax.swing.JCheckBox();
        DateCB = new javax.swing.JCheckBox();
        ProductNameCB = new javax.swing.JCheckBox();
        CategoryCB = new javax.swing.JCheckBox();
        StandardPriceCB = new javax.swing.JCheckBox();
        QuantityCB = new javax.swing.JCheckBox();
        MinimumCB = new javax.swing.JCheckBox();
        PriceCB = new javax.swing.JCheckBox();
        UnitOfMeasureCB = new javax.swing.JCheckBox();
        ActionCB = new javax.swing.JCheckBox();
        TotalPriceCB = new javax.swing.JCheckBox();
        SupplierBranchCB = new javax.swing.JCheckBox();
        BelowMinimumCB = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        reportTable.setAutoCreateRowSorter(true);
        reportTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(reportTable);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Filters");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Columns");

        TransactionCB.setSelected(true);
        TransactionCB.setText("Transaction");
        TransactionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionCBActionPerformed(evt);
            }
        });

        TransactionNoCB.setText("Transaction No.");
        TransactionNoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionNoCBActionPerformed(evt);
            }
        });

        ProductNoCB.setText("Product No.");
        ProductNoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductNoCBActionPerformed(evt);
            }
        });

        DateCB.setText("Date");
        DateCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateCBActionPerformed(evt);
            }
        });

        ProductNameCB.setText("Product Name");
        ProductNameCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductNameCBActionPerformed(evt);
            }
        });

        CategoryCB.setText("Category");
        CategoryCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryCBActionPerformed(evt);
            }
        });

        StandardPriceCB.setText("Standard Price");
        StandardPriceCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StandardPriceCBActionPerformed(evt);
            }
        });

        QuantityCB.setText("Quantity");
        QuantityCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityCBActionPerformed(evt);
            }
        });

        MinimumCB.setText("Minimum Quant.");
        MinimumCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimumCBActionPerformed(evt);
            }
        });

        PriceCB.setText("Price");
        PriceCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceCBActionPerformed(evt);
            }
        });

        UnitOfMeasureCB.setText("Unit of Measure");
        UnitOfMeasureCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitOfMeasureCBActionPerformed(evt);
            }
        });

        ActionCB.setText("Action");
        ActionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionCBActionPerformed(evt);
            }
        });

        TotalPriceCB.setText("Total Price");
        TotalPriceCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalPriceCBActionPerformed(evt);
            }
        });

        SupplierBranchCB.setText("Supplier/Branch");
        SupplierBranchCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupplierBranchCBActionPerformed(evt);
            }
        });

        BelowMinimumCB.setText("Below minimum");

        jLabel3.setText("Product");

        jLabel4.setText("Category");

        jLabel5.setText("Supplier/Branch");

        jLabel6.setText("Unit of measure");

        jCheckBox1.setText("Withdraw");

        jCheckBox2.setText("Delivery");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1038, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TransactionCB)
                                    .addComponent(TransactionNoCB)
                                    .addComponent(ProductNoCB)
                                    .addComponent(DateCB)
                                    .addComponent(ProductNameCB))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MinimumCB)
                                    .addComponent(CategoryCB)
                                    .addComponent(StandardPriceCB)
                                    .addComponent(PriceCB)
                                    .addComponent(QuantityCB))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TotalPriceCB)
                                    .addComponent(SupplierBranchCB)
                                    .addComponent(UnitOfMeasureCB)
                                    .addComponent(ActionCB)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3))
                            .addComponent(BelowMinimumCB)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2))
                        .addGap(18, 18, 18)
                        .addComponent(BelowMinimumCB)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TransactionCB)
                                .addGap(18, 18, 18)
                                .addComponent(TransactionNoCB)
                                .addGap(18, 18, 18)
                                .addComponent(ProductNoCB)
                                .addGap(18, 18, 18)
                                .addComponent(DateCB))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(TotalPriceCB)
                                        .addGap(18, 18, 18)
                                        .addComponent(SupplierBranchCB)
                                        .addGap(18, 18, 18)
                                        .addComponent(UnitOfMeasureCB))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(QuantityCB)
                                        .addGap(18, 18, 18)
                                        .addComponent(MinimumCB)
                                        .addGap(18, 18, 18)
                                        .addComponent(CategoryCB)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(StandardPriceCB)
                                            .addComponent(ActionCB))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PriceCB)
                                    .addComponent(ProductNameCB)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TransactionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionCBActionPerformed

        if (TransactionCB.isSelected()){
            //disselect
            BelowMinimumCB.setSelected(false);
            StandardPriceCB.setSelected(false);
            MinimumCB.setSelected(false);
            
            //disabled checkbox
            BelowMinimumCB.setEnabled(false);
            StandardPriceCB.setEnabled(false);
            MinimumCB.setEnabled(false);
            
            //enabled checkbox
            TransactionNoCB.setEnabled(true);
            DateCB.setEnabled(true);
            PriceCB.setEnabled(true);
            TotalPriceCB.setEnabled(true);
            SupplierBranchCB.setEnabled(true);
            ActionCB.setEnabled(true);
            
            databaseTableName = "producttrans";
        }
        else{
            //disselect
            TransactionNoCB.setSelected(false);
            DateCB.setSelected(false);
            PriceCB.setSelected(false);
            TotalPriceCB.setSelected(false);
            SupplierBranchCB.setSelected(false);
            ActionCB.setSelected(false);
            
            //disabled checkbox
            TransactionNoCB.setEnabled(false);
            DateCB.setEnabled(false);
            PriceCB.setEnabled(false);
            TotalPriceCB.setEnabled(false);
            SupplierBranchCB.setEnabled(false);
            ActionCB.setEnabled(false);
            
            //enabled checkbox
            BelowMinimumCB.setEnabled(true);
            StandardPriceCB.setEnabled(true);
            MinimumCB.setEnabled(true);

            databaseTableName = "producttable";
        }
    }//GEN-LAST:event_TransactionCBActionPerformed

    private void ProductNameCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductNameCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_ProductNameCBActionPerformed

    private void TransactionNoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionNoCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_TransactionNoCBActionPerformed

    private void ProductNoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductNoCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_ProductNoCBActionPerformed

    private void DateCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_DateCBActionPerformed

    private void QuantityCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_QuantityCBActionPerformed

    private void MinimumCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimumCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_MinimumCBActionPerformed

    private void CategoryCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_CategoryCBActionPerformed

    private void StandardPriceCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StandardPriceCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_StandardPriceCBActionPerformed

    private void PriceCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_PriceCBActionPerformed

    private void TotalPriceCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalPriceCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_TotalPriceCBActionPerformed

    private void SupplierBranchCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupplierBranchCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_SupplierBranchCBActionPerformed

    private void UnitOfMeasureCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnitOfMeasureCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_UnitOfMeasureCBActionPerformed

    private void ActionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionCBActionPerformed
        setColumnInTable();
    }//GEN-LAST:event_ActionCBActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            
        //disabled checkbox
        BelowMinimumCB.setEnabled(false);
        StandardPriceCB.setEnabled(false);
        MinimumCB.setEnabled(false);

        //enabled checkbox
        TransactionNoCB.setEnabled(true);
        DateCB.setEnabled(true);
        PriceCB.setEnabled(true);
        TotalPriceCB.setEnabled(true);
        SupplierBranchCB.setEnabled(true);
        ActionCB.setEnabled(true);

        databaseTableName = "producttrans";
    }//GEN-LAST:event_formWindowOpened

    private void setColumnInTable(){
        DefaultTableModel reportTableModel = (DefaultTableModel) reportTable.getModel();
        
        reportTableModel.setColumnCount(0);
        
        if (TransactionNoCB.isSelected()){
            reportTableModel.addColumn("Transaction No.");
        }   
    
        if (ProductNoCB.isSelected()){
            reportTableModel.addColumn("Product No.");
        }
        
        if (DateCB.isSelected()){
            reportTableModel.addColumn("Date");
        }
        
        if (ProductNameCB.isSelected()){
            reportTableModel.addColumn("Product Name");
        }
        
        if (QuantityCB.isSelected()){
            reportTableModel.addColumn("Quantity");
        }
        
        if (MinimumCB.isSelected()){
            reportTableModel.addColumn("Minimum Quantity");
        }
        
        if (CategoryCB.isSelected()){
            reportTableModel.addColumn("Category");
        }
        
        if (StandardPriceCB.isSelected()){
            reportTableModel.addColumn("Standard Price");
        }
        
        if (PriceCB.isSelected()){
            reportTableModel.addColumn("Price");
        }
        
        if (TotalPriceCB.isSelected()){
            reportTableModel.addColumn("Total Price");
        }
        
        if (SupplierBranchCB.isSelected()){
            reportTableModel.addColumn("Supplier/Branch");
        }
        
        if (UnitOfMeasureCB.isSelected()){
            reportTableModel.addColumn("Unit of Measure");
        }
        
        if (ActionCB.isSelected()){
            reportTableModel.addColumn("Action");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ActionCB;
    private javax.swing.JCheckBox BelowMinimumCB;
    private javax.swing.JCheckBox CategoryCB;
    private javax.swing.JCheckBox DateCB;
    private javax.swing.JCheckBox MinimumCB;
    private javax.swing.JCheckBox PriceCB;
    private javax.swing.JCheckBox ProductNameCB;
    private javax.swing.JCheckBox ProductNoCB;
    private javax.swing.JCheckBox QuantityCB;
    private javax.swing.JCheckBox StandardPriceCB;
    private javax.swing.JCheckBox SupplierBranchCB;
    private javax.swing.JCheckBox TotalPriceCB;
    private javax.swing.JCheckBox TransactionCB;
    private javax.swing.JCheckBox TransactionNoCB;
    private javax.swing.JCheckBox UnitOfMeasureCB;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable reportTable;
    // End of variables declaration//GEN-END:variables
}
